import{g as n}from"./app.5afaceae.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4E00\u9375\u5C0E\u51FAexcel" tabindex="-1"><a class="header-anchor" href="#\u4E00\u9375\u5C0E\u51FAexcel" aria-hidden="true">#</a> \u4E00\u9375\u5C0E\u51FAexcel</h1><h6 id="tags-\u60C5\u5883\u554F\u984C" tabindex="-1"><a class="header-anchor" href="#tags-\u60C5\u5883\u554F\u984C" aria-hidden="true">#</a> tags: <code>\u60C5\u5883\u554F\u984C</code></h6><h4 id="\u8981\u6C42" tabindex="-1"><a class="header-anchor" href="#\u8981\u6C42" aria-hidden="true">#</a> \u8981\u6C42</h4><ol><li>\u9EDE\u64CA\u6309\u9215\u5C0E\u51FA\u7576\u524D\u9801\u9762data-table excel</li></ol><h4 id="\u5BE6\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5BE6\u4F5C" aria-hidden="true">#</a> \u5BE6\u4F5C</h4><ol><li>\u4E0B\u8F09\u4EE5\u4E0B\u5169\u500B\u5957\u4EF6(\u6CE8\u610F\u7248\u672C)</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string-property property">&quot;file-saver&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.5&quot;</span><span class="token punctuation">,</span>
<span class="token string-property property">&quot;xlsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.15.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>\u5728<code>plugins</code> \u5275\u5EFA\u4E00\u652F<code>export-excel.js</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;file-saver&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">XLSX</span> <span class="token keyword">from</span> <span class="token string">&#39;xlsx&#39;</span> <span class="token comment">//vue3\u5BEB\u6CD5</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>json<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> filename <span class="token operator">=</span> <span class="token string">&#39;\u6D4B\u8BD5\u6570\u636E.xlsx&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  json<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        item<span class="token punctuation">[</span>fields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">delete</span> item<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u5220\u9664\u539F\u5148\u7684\u5BF9\u8C61\u5C5E\u6027</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> sheetName <span class="token operator">=</span> filename <span class="token comment">//excel\u7684\u6587\u4EF6\u540D\u79F0</span>
  <span class="token keyword">let</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5DE5\u4F5C\u7C3F\u5BF9\u8C61\u5305\u542B\u4E00SheetNames\u6570\u7EC4\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u8868\u5BF9\u8C61\u6620\u5C04\u8868\u540D\u79F0\u5230\u8868\u5BF9\u8C61\u3002XLSX.utils.book_new\u5B9E\u7528\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5DE5\u4F5C\u7C3F\u5BF9\u8C61\u3002</span>
  <span class="token keyword">let</span> ws <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">header</span><span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//\u5C06JS\u5BF9\u8C61\u6570\u7EC4\u8F6C\u6362\u4E3A\u5DE5\u4F5C\u8868\u3002</span>
  wb<span class="token punctuation">.</span>SheetNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sheetName<span class="token punctuation">)</span>
  wb<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>sheetName<span class="token punctuation">]</span> <span class="token operator">=</span> ws
  <span class="token keyword">const</span> defaultCellStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Verdana&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sz</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;FF00FF88&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">fgColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rgb</span><span class="token operator">:</span> <span class="token string">&quot;FFFFAA00&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//\u8BBE\u7F6E\u8868\u683C\u7684\u6837\u5F0F</span>
  <span class="token keyword">let</span> wopts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bookSST</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cellStyles</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">defaultCellStyle</span><span class="token operator">:</span> defaultCellStyle<span class="token punctuation">,</span>
    <span class="token literal-property property">showGridLines</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span> <span class="token comment">//\u5199\u5165\u7684\u6837\u5F0F</span>
  <span class="token keyword">let</span> wbout <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> wopts<span class="token punctuation">)</span>
  <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">s2ab</span><span class="token punctuation">(</span>wbout<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;application/octet-stream&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  fs<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> filename <span class="token operator">+</span> <span class="token string">&#39;.xlsx&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">s2ab</span> <span class="token operator">=</span> <span class="token parameter">s</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> ArrayBuffer <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span>
    <span class="token keyword">return</span> buf
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> buf<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><ol start="3"><li>\u5728\u4F60\u8981\u5F15\u5165\u7684\u9801\u9762(getText\u662F\u5C01\u88DDi18n\u65B9\u4FBF\u7528)</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Export <span class="token keyword">from</span> <span class="token string">&quot;@/plugins/export-excel&quot;</span><span class="token punctuation">;</span>

<span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">onExcelExport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> copidData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> fields <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.level&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.money&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">vip</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.vip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.role&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.status&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loggedInAt</span><span class="token operator">:</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;tableHeader.loggedInAt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">Export</span><span class="token punctuation">(</span>copidData<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> <span class="token string">&quot;\u5C0E\u51FA\u7684\u6A94\u6848\u540D\u7A31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,11);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
