import{i as n}from"./app.cec20444.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="javascript-\u9762\u8A66\u984C" tabindex="-1"><a class="header-anchor" href="#javascript-\u9762\u8A66\u984C" aria-hidden="true">#</a> JavaScript \u9762\u8A66\u984C</h1><h2 id="\u984C\u76EE\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u984C\u76EE\u5217\u8868" aria-hidden="true">#</a> \u984C\u76EE\u5217\u8868</h2><h3 id="_1-\u627E\u51FA\u53EA\u51FA\u73FE\u4E00\u6B21\u7684\u6578\u5B57" tabindex="-1"><a class="header-anchor" href="#_1-\u627E\u51FA\u53EA\u51FA\u73FE\u4E00\u6B21\u7684\u6578\u5B57" aria-hidden="true">#</a> 1. \u627E\u51FA\u53EA\u51FA\u73FE\u4E00\u6B21\u7684\u6578\u5B57</h3><p>i \u70BA\u4E00\u7D44\u6574\u6578\u9663\u5217 <code>[6, 4, 3, 2, 4, 1, 6, 3, 2]</code>\uFF0C\u9664\u4E86\u4E00\u500B\u6578\u5B57\u53EA\u51FA\u73FE\u4E00\u6B21\u4E4B\u5916\uFF0C\u5176\u4ED6\u6578\u5B57\u90FD\u6703\u51FA\u73FE\u5169\u6B21\uFF0C\u8ACB\u5BEB\u4E00\u500B\u51FD\u6578\uFF0C\u627E\u51FA\u9019\u500B\u552F\u4E00\u7684\u6578\u5B57\u4E26\u8FD4\u56DE</p><h3 id="_2-\u52A0\u7E3D\u591A\u578B\u5225\u9663\u5217\u4E2D\u7684\u6574\u6578" tabindex="-1"><a class="header-anchor" href="#_2-\u52A0\u7E3D\u591A\u578B\u5225\u9663\u5217\u4E2D\u7684\u6574\u6578" aria-hidden="true">#</a> 2. \u52A0\u7E3D\u591A\u578B\u5225\u9663\u5217\u4E2D\u7684\u6574\u6578</h3><p>i \u70BA\u4E00\u7D44\u591A\u578B\u5225\u9663\u5217\u5305\u542B\uFF08\u6574\u6578\u3001\u5B57\u4E32\u3001\u9663\u5217\uFF09\uFF0C\u8ACB\u52A0\u7E3D\u9663\u5217\u6240\u6709\u627E\u5230\u7684\u6574\u6578\u4E26\u8FD4\u56DE</p><h3 id="_3-\u8FD4\u56DE\u5B57\u4E32\u7684\u526F\u6A94\u540D" tabindex="-1"><a class="header-anchor" href="#_3-\u8FD4\u56DE\u5B57\u4E32\u7684\u526F\u6A94\u540D" aria-hidden="true">#</a> 3. \u8FD4\u56DE\u5B57\u4E32\u7684\u526F\u6A94\u540D</h3><p>i \u70BA\u5B57\u4E32\uFF0C\u5982\u679C\u8A72\u5B57\u4E32\u6709\u526F\u6A94\u540D\uFF0C\u5247\u8FD4\u56DE\u8A72\u5B57\u4E32\u7684\u526F\u6A94\u540D\uFF0C\u6C92\u6709\u5247\u8FD4\u56DE FALSE</p><h3 id="_4-\u627E\u51FA\u6700\u9577\u7684\u5B57\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-\u627E\u51FA\u6700\u9577\u7684\u5B57\u4E32" aria-hidden="true">#</a> 4. \u627E\u51FA\u6700\u9577\u7684\u5B57\u4E32</h3><p>i \u70BA\u4E00\u7D44\u5B57\u4E32\u9663\u5217\uFF0C\u8ACB\u8FD4\u56DE\u9663\u5217\u4E2D\u6700\u9577\u7684\u5B57\u4E32</p><h3 id="_5-\u8A08\u7B97\u91CD\u8907\u5B57\u4E32\u7E3D\u6578" tabindex="-1"><a class="header-anchor" href="#_5-\u8A08\u7B97\u91CD\u8907\u5B57\u4E32\u7E3D\u6578" aria-hidden="true">#</a> 5. \u8A08\u7B97\u91CD\u8907\u5B57\u4E32\u7E3D\u6578</h3><p>i \u70BA\u4E00\u7D44\u5B57\u4E32\u9663\u5217\uFF0C\u8ACB\u78BA\u8A8D\u9663\u5217\u4E2D\u662F\u5426\u6709\u91CD\u8907\u7684\u5B57\u4E32\uFF0C\u4E26\u4E14\u8FD4\u56DE\u6240\u6709\u91CD\u8907\u5B57\u4E32\u7684\u52A0\u7E3D\u7E3D\u6578</p><h3 id="_6-\u8A08\u7B97\u7279\u5B9A\u9375\u503C\u689D\u4EF6\u7684\u6B21\u6578" tabindex="-1"><a class="header-anchor" href="#_6-\u8A08\u7B97\u7279\u5B9A\u9375\u503C\u689D\u4EF6\u7684\u6B21\u6578" aria-hidden="true">#</a> 6. \u8A08\u7B97\u7279\u5B9A\u9375\u503C\u689D\u4EF6\u7684\u6B21\u6578</h3><p>i \u70BA\u4E00\u7D44\u591A\u7DAD\u591A\u578B\u5225\u9663\u5217\uFF0C\u8ACB\u5F9E\u4E2D\u627E\u51FA\u9375\u503C\u70BA staff\uFF0C\u5176\u503C\u70BA true\uFF0C\u4E26\u52A0\u7E3D\u7B26\u5408\u689D\u4EF6\u7684\u6B21\u6578\u4E26\u56DE\u50B3</p><h2 id="\u89E3\u7B54" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54" aria-hidden="true">#</a> \u89E3\u7B54</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u627E\u51FA\u53EA\u51FA\u73FE\u4E00\u6B21\u7684\u6578\u5B57</span>
<span class="token keyword">function</span> <span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> num <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>count<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> num <span class="token keyword">in</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// parseInt because keys are strings</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// No unique number found</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. \u52A0\u7E3D\u591A\u578B\u5225\u9663\u5217\u4E2D\u7684\u6240\u6709\u6574\u6578</span>
<span class="token keyword">function</span> <span class="token function">sumIntegers</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> <span class="token function">sumIntegers</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Recursive call for nested arrays</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 3. \u8FD4\u56DE\u5B57\u4E32\u7684\u526F\u6A94\u540D\u6216 FALSE</span>
<span class="token keyword">function</span> <span class="token function">getExtension</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> parts <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> parts<span class="token punctuation">[</span>parts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 4. \u8FD4\u56DE\u5B57\u4E32\u9663\u5217\u4E2D\u6700\u9577\u7684\u5B57\u4E32</span>
<span class="token keyword">function</span> <span class="token function">findLongestString</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">longest<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> longest<span class="token punctuation">.</span>length <span class="token operator">?</span> str <span class="token operator">:</span> longest<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 5. \u8FD4\u56DE\u91CD\u8907\u5B57\u4E32\u7684\u7E3D\u6578</span>
<span class="token keyword">function</span> <span class="token function">countDuplicateStrings</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> duplicateCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> str <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>count<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> str <span class="token keyword">in</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      duplicateCount <span class="token operator">+=</span> count<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> duplicateCount<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 6. \u627E\u51FA\u9375\u503C\u70BA staff\uFF0C\u503C\u70BA true \u7684\u6B21\u6578</span>
<span class="token keyword">function</span> <span class="token function">countStaffTrue</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> obj <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>staff <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="\u6E2C\u8A66\u7BC4\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6E2C\u8A66\u7BC4\u4F8B" aria-hidden="true">#</a> \u6E2C\u8A66\u7BC4\u4F8B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u627E\u51FA\u552F\u4E00\u7684\u6578\u5B57</span>
<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Unique number:&quot;</span><span class="token punctuation">,</span> <span class="token function">findUnique</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: 1</span>

<span class="token comment">// 2. \u52A0\u7E3D\u6574\u6578</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Sum of integers:&quot;</span><span class="token punctuation">,</span> <span class="token function">sumIntegers</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: 15</span>

<span class="token comment">// 3. \u53D6\u5F97\u526F\u6A94\u540D</span>
<span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">&quot;myfile.txt&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;anotherfile&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Extension:&quot;</span><span class="token punctuation">,</span> <span class="token function">getExtension</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: txt</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Extension:&quot;</span><span class="token punctuation">,</span> <span class="token function">getExtension</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: false</span>

<span class="token comment">// 4. \u627E\u51FA\u6700\u9577\u5B57\u4E32</span>
<span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;grape&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Longest string:&quot;</span><span class="token punctuation">,</span> <span class="token function">findLongestString</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: banana</span>

<span class="token comment">// 5. \u8A08\u7B97\u91CD\u8907\u5B57\u4E32\u6578\u91CF</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Duplicate string count:&quot;</span><span class="token punctuation">,</span> <span class="token function">countDuplicateStrings</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: 4</span>

<span class="token comment">// 6. \u8A08\u7B97 staff: true \u7684\u6B21\u6578</span>
<span class="token keyword">const</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">staff</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">staff</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">staff</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">staff</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Count of staff:true:&quot;</span><span class="token punctuation">,</span> <span class="token function">countStaffTrue</span><span class="token punctuation">(</span>arr4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Output: 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,18);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
