import{k as p,o as e,c as o,a as n,m as a,F as c,i as l,b as t}from"./app.13cd8cb0.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=l(`<h1 id="zustand-\u57FA\u790E\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#zustand-\u57FA\u790E\u4F7F\u7528" aria-hidden="true">#</a> Zustand \u57FA\u790E\u4F7F\u7528</h1><h3 id="set\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#set\u65B9\u6CD5" aria-hidden="true">#</a> set\u65B9\u6CD5</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>  <span class="token function-variable function">setThemeConfig</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">LMThemeConfig</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">config</span><span class="token operator">:</span> config<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// setThemeConfig: (config) =&gt; set((): LMThemeConfig =&gt; ({ config })),</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5728\u4E00\u822C-tsx\u6A94\u6848\u8ABF\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5728\u4E00\u822C-tsx\u6A94\u6848\u8ABF\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u5728\u4E00\u822C<code>.tsx</code>\u6A94\u6848\u8ABF\u7528\u65B9\u6CD5</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AppState<span class="token punctuation">,</span> useAppStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/app&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> isLoading<span class="token punctuation">,</span> count<span class="token punctuation">,</span> increase<span class="token punctuation">,</span> resetCount <span class="token punctuation">}</span> <span class="token operator">=</span> useAppStore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AppState</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(
(state: AppState) =&gt; state,
);

</span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u5728store\u8ABF\u7528\u5176\u4ED6store\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5728store\u8ABF\u7528\u5176\u4ED6store\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u5728store\u8ABF\u7528\u5176\u4ED6store\u7684\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAppStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;zustand&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useUserStore <span class="token operator">=</span> create<span class="token operator">&lt;</span>UserState<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">set</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">getPermissions</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7D14\u72C0\u614B\u6539\u8B8A =&gt; useAppStore.setState({ isLoading: true })</span>
    useAppStore<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> testApi<span class="token punctuation">.</span><span class="token function">testReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">permissions</span><span class="token operator">:</span> <span class="token keyword">await</span> res <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      useAppStore<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u53C3\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C3\u8003" aria-hidden="true">#</a> \u53C3\u8003</h3>`,8),k={href:"https://github.com/pmndrs/zustand#readingwriting-state-and-reacting-to-changes-outside-of-components",target:"_blank",rel:"noopener noreferrer"},d=t("zustand"),b={href:"https://stackoverflow.com/questions/75530833/how-to-call-zustand-react-hook-outside-of-react-component",target:"_blank",rel:"noopener noreferrer"},m=t("How to call Zustand / React hook outside of React component?"),h={href:"https://hackmd.io/@ani168/BJdsf4cpc",target:"_blank",rel:"noopener noreferrer"},g=t("Zustand \u7B46\u8A18");function f(_,x){const s=p("ExternalLinkIcon");return e(),o(c,null,[i,n("ul",null,[n("li",null,[n("a",k,[d,a(s)])]),n("li",null,[n("a",b,[m,a(s)])]),n("li",null,[n("a",h,[g,a(s)])])])],64)}var v=r(u,[["render",f]]);export{v as default};
