import{i as t,o as e,c as o,a as n,k as a,F as c,g as l,b as p}from"./app.911a4c48.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=l(`<h1 id="vite-with-remockjs-\u5BE6\u7528\u7BC4\u4F8B" tabindex="-1"><a class="header-anchor" href="#vite-with-remockjs-\u5BE6\u7528\u7BC4\u4F8B" aria-hidden="true">#</a> Vite with remockjs \u5BE6\u7528\u7BC4\u4F8B</h1><h6 id="tags-vite" tabindex="-1"><a class="header-anchor" href="#tags-vite" aria-hidden="true">#</a> tags: <code>Vite</code></h6><h3 id="\u5148\u4E0B\u8F09remock-js" tabindex="-1"><a class="header-anchor" href="#\u5148\u4E0B\u8F09remock-js" aria-hidden="true">#</a> \u5148\u4E0B\u8F09<code>remock.js</code></h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm i remockjs
\u6216
yarn add remockjs
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5275\u5EFAremockjs\u6A94\u6848" tabindex="-1"><a class="header-anchor" href="#\u5275\u5EFAremockjs\u6A94\u6848" aria-hidden="true">#</a> \u5275\u5EFAremockjs\u6A94\u6848</h3><ul><li>\u5275\u5EFA<code>api/remock/remock.js</code>\u3001<code>api/remock/dev.ts</code>\u3001<code>api/remock/index.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in api/remock/remock.is</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mockXHR<span class="token punctuation">,</span> mockRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;remockjs&#39;</span><span class="token punctuation">;</span>

<span class="token function">mockXHR</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in api/remock/dev.ts</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> Response <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/common/types&#39;</span>

<span class="token keyword">function</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">url</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyName <span class="token operator">=</span> method <span class="token operator">===</span> <span class="token string">&#39;get&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;params&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>axios <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>keyName<span class="token punctuation">]</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">//test</span>
  <span class="token keyword">async</span> <span class="token function">getTestData</span><span class="token punctuation">(</span>data<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>Response <span class="token operator">&amp;</span> any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test-data&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in api/remock/index.ts</span>
<span class="token keyword">import</span> dev <span class="token keyword">from</span> <span class="token string">&#39;./dev&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> mock <span class="token keyword">from</span> <span class="token string">&#39;./remock&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DEV</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> dev<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><h3 id="\u5047\u8CC7\u6599\u7522\u751F-\u5C0E\u5165\u8655\u7406" tabindex="-1"><a class="header-anchor" href="#\u5047\u8CC7\u6599\u7522\u751F-\u5C0E\u5165\u8655\u7406" aria-hidden="true">#</a> \u5047\u8CC7\u6599\u7522\u751F&amp;\u5C0E\u5165\u8655\u7406</h3><ul><li>\u5275\u5EFA\u4E00\u96BB<code>mock/test.js</code>\u6E2C\u8A66\u80FD\u5426\u6B63\u5E38\u4F7F\u7528mock api</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in test.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">testData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;data|3-5&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token string">&#39;@natural(10000, 19999)&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">beginDate</span><span class="token operator">:</span> <span class="token string">&#39;@date(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">endDate</span><span class="token operator">:</span> <span class="token string">&#39;@date(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;@natural(0, 1)&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u8CC7\u6599\u6C92\u554F\u984C\u5F8C\uFF0C\u518D\u5275\u5EFA\u4E00\u96BB<code>mock/mockApi.js</code>\u505A\u8CC7\u6599\u81EA\u52D5\u5C0E\u5165\u8655\u7406</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in mockApi.js</span>
<span class="token keyword">const</span> mockDataFiles <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;../mock/*.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;!**/mokApi.js&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> mockDataFilesList <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> fileName <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">//\u53D6\u5F97\u6240\u6709\u8CC7\u6599\u6A94\u6848</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> mockDataFiles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mockDataFilesList<span class="token punctuation">[</span>key<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\.\\/mock\\/|\\.js)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> mockDataFiles<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">const</span> keyName <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.js&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
  keyName <span class="token operator">!==</span> <span class="token string">&#39;mockApi&#39;</span> <span class="token operator">?</span> fileName<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>keyName<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> mockDataArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>mockDataFilesList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> returnResult <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;mockApi&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  returnResult <span class="token operator">=</span> mockDataFilesList<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>default
  mockDataArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>returnResult<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token comment">//\u5408\u4F75\u8CC7\u6599</span>
<span class="token keyword">const</span> mockDatas <span class="token operator">=</span> mockDataArray<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>target<span class="token punctuation">,</span> <span class="token operator">...</span>target<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token comment">//\u7269\u4EF6\u53BB\u91CD</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>mockDatas<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> mockDatas<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  mockDatas<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="\u4E4B\u5F8C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E4B\u5F8C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528" aria-hidden="true">#</a> \u4E4B\u5F8C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//in api/remock/remock.is</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mockXHR<span class="token punctuation">,</span> mockRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;remockjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> api <span class="token keyword">from</span> <span class="token string">&#39;@/mock/mockApi&#39;</span><span class="token punctuation">;</span>

<span class="token function">mockXHR</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">mockClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//test</span>
  <span class="token function">mockRequest</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/api/test-data&#39;</span><span class="token punctuation">,</span> api<span class="token punctuation">.</span>mockDatas<span class="token punctuation">[</span><span class="token string">&#39;testData&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u53C3\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C3\u8003" aria-hidden="true">#</a> \u53C3\u8003</h3>`,18),k={href:"https://juejin.cn/post/7120820138907009060",target:"_blank",rel:"noopener noreferrer"},m=p("Vite 3.0 \u6B63\u5F0F\u53D1\u5E03\uFF0C\u4E0B\u4E00\u4EE3\u524D\u7AEF\u6784\u5EFA\u5DE5\u5177\uFF01"),b={href:"https://www.npmjs.com/package/remockjs",target:"_blank",rel:"noopener noreferrer"},d=p("remockjs");function y(g,h){const s=t("ExternalLinkIcon");return e(),o(c,null,[i,n("ul",null,[n("li",null,[n("a",k,[m,a(s)])]),n("li",null,[n("a",b,[d,a(s)])])])],64)}var v=r(u,[["render",y]]);export{v as default};
