import{i as p,o as t,c as e,a as n,k as o,F as c,g as l,b as s}from"./app.35875d2e.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=l(`<h1 id="i18n\u7B46\u8A18" tabindex="-1"><a class="header-anchor" href="#i18n\u7B46\u8A18" aria-hidden="true">#</a> i18n\u7B46\u8A18</h1><blockquote><p>(\u9019\u662F\u7528vite\u975Ewebpack)</p></blockquote><ol><li>\u5B89\u88DDvue-i18n(\u6211\u7528\u7684\u7248\u672C\u662F^9.2.0-beta.35)</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> yarn add vue-i18n -D
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>\u5275\u5EFA<code>src/plugins/i18n.js</code>\u3001<code>src/lang/zh-TW.js</code>\u3001<code>src/lang/zh-CN.js</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// zh-TW.js || zh-CN.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-i18n&#39;</span>
<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;../lang/**/*.js&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//\u7372\u53D6\u6240\u6709\u6587\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">getLangAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">getLangFiles</span><span class="token punctuation">(</span>modules<span class="token punctuation">,</span>message<span class="token punctuation">)</span>
  <span class="token keyword">return</span> message
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u7372\u53D6\u6240\u6709\u8A9E\u8A00\u6587\u4EF6
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">moduleList</span>
 */</span>
 <span class="token keyword">function</span> <span class="token function">getLangFiles</span><span class="token punctuation">(</span><span class="token parameter">moduleList<span class="token punctuation">,</span> msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> path <span class="token keyword">in</span> moduleList<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>moduleList<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//  \u7372\u53D6\u6587\u4EF6\u540D</span>
      <span class="token keyword">let</span> pathName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">[</span>pathName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        msg<span class="token punctuation">[</span>pathName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>moduleList<span class="token punctuation">[</span>pathName<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token operator">...</span>moduleList<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">.</span>default
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        msg<span class="token punctuation">[</span>pathName<span class="token punctuation">]</span> <span class="token operator">=</span> moduleList<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">.</span>default
      <span class="token punctuation">}</span>
      
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">globalInjection</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5168\u57DF\u6CE8\u5165\uFF0C\u8B93\u4F60\u5728 &lt;template&gt; \u53EF\u4EE5\u4F7F\u7528 $t</span>
  <span class="token literal-property property">legacy</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//\u8B93\u4F60\u53EF\u4EE5\u5728 composition API \u4E2D\u4F7F\u7528</span>
  <span class="token literal-property property">locale</span><span class="token operator">:</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-TW&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u82E5\u9078\u64C7\u7684\u8A9E\u8A00\u7F3A\u5C11\u7FFB\u8B6F\u5247\u9000\u56DE\u7684\u8A9E\u8A00</span>
  <span class="token literal-property property">fallbackLocale</span><span class="token operator">:</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-TW&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token function">getLangAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> i18n

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">$t</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> i18n<span class="token punctuation">.</span>global<span class="token punctuation">.</span><span class="token function">t</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><ol start="3"><li>in <code>main.ts</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> i18n <span class="token keyword">from</span> <span class="token string">&#39;@/plugins/i18n&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,9),k={start:"4"},b=s("\u5176\u4ED6\u8ACB\u53C3\u8003"),m={href:"https://kazupon.github.io/vue-i18n/guide/formatting.html",target:"_blank",rel:"noopener noreferrer"},d=s("vue-i18n");function g(y,f){const a=p("ExternalLinkIcon");return t(),e(c,null,[i,n("ol",k,[n("li",null,[b,n("a",m,[d,o(a)])])])],64)}var w=r(u,[["render",g]]);export{w as default};
